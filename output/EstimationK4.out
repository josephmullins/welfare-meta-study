ERROR: LoadError: StackOverflowError:
Stacktrace:
  [1] get_offer_dist(ηgrid::LinRange{Float64, Int64}, μ::ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, σ::ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, R::Type)
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/model/states_transitions.jl:24
  [2] update_transitions(p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, Float64, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Float64, Float64, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, 3}, Matrix{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}})
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/model/states_transitions.jl:15
  [3] pars(x::Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, Float64, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Float64, Float64, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, 3}, Matrix{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}})
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/model/update.jl:62
  [4] log_likelihood_threaded(x::Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, Float64, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Float64, Float64, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, 3}, Matrix{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, EM::Vector{EM_data}, MD::Vector{model_data}, data::Vector{likelihood_data}, n_idx::Vector{Vector{Int64}})
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/likelihood.jl:13
  [5] log_likelihood_threaded(x::Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, Float64, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Float64, Float64, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}, 3}, Matrix{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, EM::Vector{EM_data}, MD::Vector{model_data}, data::Vector{likelihood_data}, n_idx::Vector{Vector{Int64}}) (repeats 7258 times)
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/likelihood.jl:14
  [6] log_likelihood_threaded(x::Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}, p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, EM::Vector{EM_data}, MD::Vector{model_data}, data::Vector{likelihood_data}, n_idx::Vector{Vector{Int64}})
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/likelihood.jl:14
  [7] (::var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64})(x::Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}})
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/maximization.jl:6
  [8] chunk_mode_gradient!(result::DiffResults.MutableDiffResult{1, Float64, Tuple{Vector{Float64}}}, f::var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, x::Vector{Float64}, cfg::ForwardDiff.GradientConfig{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}})
    @ ForwardDiff ~/.julia/packages/ForwardDiff/PcZ48/src/gradient.jl:123
  [9] gradient!(result::DiffResults.MutableDiffResult{1, Float64, Tuple{Vector{Float64}}}, f::var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, x::Vector{Float64}, cfg::ForwardDiff.GradientConfig{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}}, ::Val{true})
    @ ForwardDiff ~/.julia/packages/ForwardDiff/PcZ48/src/gradient.jl:39
 [10] gradient!(result::DiffResults.MutableDiffResult{1, Float64, Tuple{Vector{Float64}}}, f::var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, x::Vector{Float64}, cfg::ForwardDiff.GradientConfig{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}})
    @ ForwardDiff ~/.julia/packages/ForwardDiff/PcZ48/src/gradient.jl:35
 [11] (::NLSolversBase.var"#14#18"{Float64, var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, ForwardDiff.GradientConfig{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#29"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 11}}}})(out::Vector{Float64}, x::Vector{Float64})
    @ NLSolversBase ~/.julia/packages/NLSolversBase/kavn7/src/objective_types/oncedifferentiable.jl:70
 [12] value_gradient!!(obj::OnceDifferentiable{Float64, Vector{Float64}, Vector{Float64}}, x::Vector{Float64})
    @ NLSolversBase ~/.julia/packages/NLSolversBase/kavn7/src/interface.jl:82
 [13] initial_state(method::LBFGS{Nothing, LineSearches.InitialStatic{Float64}, LineSearches.HagerZhang{Float64, Base.RefValue{Bool}}, Optim.var"#19#21"}, options::Optim.Options{Float64, Nothing}, d::OnceDifferentiable{Float64, Vector{Float64}, Vector{Float64}}, initial_x::Vector{Float64})
    @ Optim ~/.julia/packages/Optim/Adqv3/src/multivariate/solvers/first_order/l_bfgs.jl:164
 [14] optimize
    @ ~/.julia/packages/Optim/Adqv3/src/multivariate/optimize/optimize.jl:36 [inlined]
 [15] #optimize#89
    @ ~/.julia/packages/Optim/Adqv3/src/multivariate/optimize/interface.jl:143 [inlined]
 [16] optimize
    @ ~/.julia/packages/Optim/Adqv3/src/multivariate/optimize/interface.jl:139 [inlined]
 [17] mstep_major(p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, EM::Vector{EM_data}, MD::Vector{model_data}, n_idx::Vector{Vector{Int64}}, iterations::Int64)
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/maximization.jl:7
 [18] expectation_maximization(p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, EM::Vector{EM_data}, MD::Vector{model_data}, n_idx::Vector{Vector{Int64}}; max_iter::Int64, save::Bool, mstep_iter::Int64)
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/EM.jl:14
 [19] top-level scope
    @ /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/scripts/estimate_model_childsample_K4.jl:30
in expression starting at /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/scripts/estimate_model_childsample_K4.jl:30
 ===== EM-algorithm: iteration 0 =====
