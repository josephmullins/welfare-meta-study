ERROR: LoadError: TaskFailedException
Stacktrace:
  [1] wait
    @ ./task.jl:349 [inlined]
  [2] fetch
    @ ./task.jl:369 [inlined]
  [3] _broadcast_getindex_evalf
    @ ./broadcast.jl:683 [inlined]
  [4] _broadcast_getindex
    @ ./broadcast.jl:656 [inlined]
  [5] getindex
    @ ./broadcast.jl:610 [inlined]
  [6] copy
    @ ./broadcast.jl:912 [inlined]
  [7] materialize
    @ ./broadcast.jl:873 [inlined]
  [8] log_likelihood_threaded(p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, R::DataType, EM::Vector{EM_data}, MD::Vector{model_data}, data::Vector{likelihood_data}, n_idx::Vector{Vector{Int64}})
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/likelihood.jl:9
  [9] log_likelihood_threaded(x::Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, fname::Vector{Symbol}, ft::Vector{Int64}, EM::Vector{EM_data}, MD::Vector{model_data}, data::Vector{likelihood_data}, n_idx::Vector{Vector{Int64}})
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/likelihood.jl:20
 [10] (::var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64})(x::Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}})
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/maximization.jl:14
 [11] vector_mode_dual_eval!
    @ ~/.julia/packages/ForwardDiff/PcZ48/src/apiutils.jl:24 [inlined]
 [12] vector_mode_gradient!(result::DiffResults.MutableDiffResult{1, Float64, Tuple{Vector{Float64}}}, f::var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, x::Vector{Float64}, cfg::ForwardDiff.GradientConfig{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}})
    @ ForwardDiff ~/.julia/packages/ForwardDiff/PcZ48/src/gradient.jl:96
 [13] gradient!
    @ ~/.julia/packages/ForwardDiff/PcZ48/src/gradient.jl:37 [inlined]
 [14] gradient!
    @ ~/.julia/packages/ForwardDiff/PcZ48/src/gradient.jl:35 [inlined]
 [15] (::NLSolversBase.var"#14#18"{Float64, var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, ForwardDiff.GradientConfig{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}}})(out::Vector{Float64}, x::Vector{Float64})
    @ NLSolversBase ~/.julia/packages/NLSolversBase/kavn7/src/objective_types/oncedifferentiable.jl:70
 [16] value_gradient!!(obj::OnceDifferentiable{Float64, Vector{Float64}, Vector{Float64}}, x::Vector{Float64})
    @ NLSolversBase ~/.julia/packages/NLSolversBase/kavn7/src/interface.jl:82
 [17] initial_state(method::LBFGS{Nothing, LineSearches.InitialStatic{Float64}, LineSearches.HagerZhang{Float64, Base.RefValue{Bool}}, Optim.var"#19#21"}, options::Optim.Options{Float64, Nothing}, d::OnceDifferentiable{Float64, Vector{Float64}, Vector{Float64}}, initial_x::Vector{Float64})
    @ Optim ~/.julia/packages/Optim/Adqv3/src/multivariate/solvers/first_order/l_bfgs.jl:164
 [18] optimize
    @ ~/.julia/packages/Optim/Adqv3/src/multivariate/optimize/optimize.jl:36 [inlined]
 [19] #optimize#89
    @ ~/.julia/packages/Optim/Adqv3/src/multivariate/optimize/interface.jl:143 [inlined]
 [20] optimize
    @ ~/.julia/packages/Optim/Adqv3/src/multivariate/optimize/interface.jl:139 [inlined]
 [21] mstep_major_block(p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, fnames::Vector{Symbol}, ft::Vector{Int64}, EM::Vector{EM_data}, MD::Vector{model_data}, n_idx::Vector{Vector{Int64}}, iterations::Int64)
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/maximization.jl:15
 [22] mstep_blocks(p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, EM::Vector{EM_data}, MD::Vector{model_data}, n_idx::Vector{Vector{Int64}}, mstep_iter::Int64)
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/maximization.jl:22
 [23] expectation_maximization(p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, EM::Vector{EM_data}, MD::Vector{model_data}, n_idx::Vector{Vector{Int64}}; max_iter::Int64, save::Bool, mstep_iter::Int64)
    @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/EM.jl:16
 [24] top-level scope
    @ /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/scripts/estimate_model_site_specific.jl:41

    nested task error: BoundsError: attempt to access 4-element LinRange{Float64, Int64} at index [0]
    Stacktrace:
     [1] throw_boundserror(A::LinRange{Float64, Int64}, I::Tuple{Int64})
       @ Base ./abstractarray.jl:744
     [2] checkbounds
       @ ./abstractarray.jl:709 [inlined]
     [3] getindex
       @ ./range.jl:940 [inlined]
     [4] logwage(p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, md::model_data, kτ::Int64, kη::Int64, t::Int64)
       @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/model/prices.jl:2
     [5] wage_log_like(logW::Float64, p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, md::model_data, kτ::Int64, kη::Int64, t::Int64)
       @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/likelihood.jl:85
     [6] prices_log_like(em::EM_data, p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, md::model_data, data::likelihood_data, J::Int64, s_inv::CartesianIndices{2, Tuple{Base.OneTo{Int64}, Base.OneTo{Int64}}}, k_inv::CartesianIndices{4, NTuple{4, Base.OneTo{Int64}}})
       @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/likelihood.jl:213
     [7] log_likelihood(em::EM_data, md::model_data, p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, logP::Array{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}, 3}, data::likelihood_data)
       @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/likelihood.jl:75
     [8] log_likelihood_chunk(p::NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, R::DataType, MD::SubArray{model_data, 1, Vector{model_data}, Tuple{UnitRange{Int64}}, true}, EM::Vector{EM_data}, data::Vector{likelihood_data}, n_idx::Vector{Vector{Int64}})
       @ Main /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/src/estimation/likelihood.jl:59
     [9] (::var"#15#17"{SubArray{model_data, 1, Vector{model_data}, Tuple{UnitRange{Int64}}, true}, NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}, Vector{Float64}, Vector{ForwardDiff.Dual{ForwardDiff.Tag{var"#objective#32"{NamedTuple{(:Kτ, :Kη, :β, :wq, :αC, :αθ, :αH, :αA, :αS, :αF, :αR, :αP, :σ, :σ_W, :σ_PF, :δ, :λ₀, :λ₁, :μₒ, :σₒ, :ση, :βΓ, :βw, :βf, :βτ, :πη, :ηgrid, :Fη, :πₛ, :nests), Tuple{Int64, Int64, Float64, Vector{Float64}, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Vector{Float64}, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Float64, Float64, Float64, Vector{Float64}, Vector{Float64}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, Vector{Symbol}, Vector{Int64}, Vector{EM_data}, Vector{model_data}, Vector{Vector{Int64}}, Int64}, Float64}, Float64, 9}}, Vector{Float64}, Matrix{Float64}, Array{Float64, 4}, LinRange{Float64, Int64}, Array{Float64, 3}, Matrix{Float64}, NamedTuple{(:B, :C), Tuple{Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}, Tuple{Vector{Vector{Int64}}, Vector{Vector{Int64}}, Vector{Vector{Int64}}}}}}}, DataType, Vector{EM_data}, Vector{likelihood_data}, Vector{Vector{Int64}}})()
       @ Main ./threadingconstructs.jl:410
in expression starting at /panfs/jay/groups/5/mullinsj/mullinsj/welfare-meta-study/scripts/estimate_model_site_specific.jl:41
 ===== EM-algorithm: iteration 0 =====
current likelihood: -59246.05513546063
current error: 3.039617184036523
 ===== EM-algorithm: iteration 1 =====
current likelihood: -33271.10991529817
current error: 1.7749396537510567
 ===== EM-algorithm: iteration 2 =====
current likelihood: -28519.541338940624
current error: 0.5339644624563422
 ===== EM-algorithm: iteration 3 =====
current likelihood: -26878.40285137264
current error: 0.2789195168954306
 ===== EM-algorithm: iteration 4 =====
current likelihood: -26510.93220227828
current error: 0.19478772871062633
 ===== EM-algorithm: iteration 5 =====
current likelihood: -26363.243740737435
current error: 0.14366234791975518
 ===== EM-algorithm: iteration 6 =====
current likelihood: -26304.82905939819
current error: 0.1110603206816001
 ===== EM-algorithm: iteration 7 =====
current likelihood: -26259.2949829777
current error: 0.08199753826122969
 ===== EM-algorithm: iteration 8 =====
current likelihood: -26233.004886892108
current error: 0.07342290084726022
 ===== EM-algorithm: iteration 9 =====
current likelihood: -26213.87654106462
current error: 0.06633599514636712
 ===== EM-algorithm: iteration 10 =====
current likelihood: -26200.1982638815
current error: 0.06046997951642741
 ===== EM-algorithm: iteration 11 =====
current likelihood: -26189.490157671844
current error: 0.05473133582834633
 ===== EM-algorithm: iteration 12 =====
current likelihood: -26180.45444731583
current error: 0.050177778763174086
 ===== EM-algorithm: iteration 13 =====
current likelihood: -26172.602230493427
current error: 0.046153578077322344
 ===== EM-algorithm: iteration 14 =====
current likelihood: -26165.729511074263
current error: 0.04271231112423113
 ===== EM-algorithm: iteration 15 =====
current likelihood: -26159.572873140994
current error: 0.03975630907724348
 ===== EM-algorithm: iteration 16 =====
current likelihood: -26153.985161287295
current error: 0.03725959646094168
 ===== EM-algorithm: iteration 17 =====
current likelihood: -26149.08350507436
current error: 0.032924308568606175
 ===== EM-algorithm: iteration 18 =====
current likelihood: -26144.92716533884
current error: 0.03009361715285752
 ===== EM-algorithm: iteration 19 =====
current likelihood: -26141.573642367126
current error: 0.029448804408864104
 ===== EM-algorithm: iteration 20 =====
current likelihood: -26138.610313708203
current error: 0.028693373012561585
 ===== EM-algorithm: iteration 21 =====
current likelihood: -26136.037905603414
current error: 0.02778561202891705
 ===== EM-algorithm: iteration 22 =====
current likelihood: -26133.707133722215
current error: 0.026890541317255545
 ===== EM-algorithm: iteration 23 =====
current likelihood: -26131.628755513804
current error: 0.025937175094403964
 ===== EM-algorithm: iteration 24 =====
current likelihood: -26129.72460374233
current error: 0.025088272517496124
 ===== EM-algorithm: iteration 25 =====
current likelihood: -26128.092273265283
current error: 0.0241920775211657
 ===== EM-algorithm: iteration 26 =====
current likelihood: -26126.42381714588
current error: 0.023302603531333066
 ===== EM-algorithm: iteration 27 =====
current likelihood: -26124.885954862173
current error: 0.022570100050824493
 ===== EM-algorithm: iteration 28 =====
current likelihood: -26123.457809169897
current error: 0.021807798394447797
 ===== EM-algorithm: iteration 29 =====
current likelihood: -26122.063252416454
current error: 0.021104091349541054
 ===== EM-algorithm: iteration 30 =====
current likelihood: -26120.799093701273
current error: 0.020437731140900306
 ===== EM-algorithm: iteration 31 =====
current likelihood: -26119.685628732783
current error: 0.019891533963022123
 ===== EM-algorithm: iteration 32 =====
current likelihood: -26118.702529462786
current error: 0.019336585935999295
 ===== EM-algorithm: iteration 33 =====
current likelihood: -26117.78102072668
current error: 0.018814304396478798
 ===== EM-algorithm: iteration 34 =====
current likelihood: -26116.878311064058
current error: 0.01830408563033803
 ===== EM-algorithm: iteration 35 =====
current likelihood: -26116.095418289326
current error: 0.017888340887187715
 ===== EM-algorithm: iteration 36 =====
current likelihood: -26115.36059271786
current error: 0.017420873147151683
 ===== EM-algorithm: iteration 37 =====
current likelihood: -26114.70795581451
current error: 0.017036380174807464
 ===== EM-algorithm: iteration 38 =====
current likelihood: -26114.103039782323
current error: 0.016665487467333984
 ===== EM-algorithm: iteration 39 =====
current likelihood: -26113.499382265447
current error: 0.01624062742844723
 ===== EM-algorithm: iteration 40 =====
current likelihood: -26113.014202208637
current error: 0.01593299567671691
 ===== EM-algorithm: iteration 41 =====
current likelihood: -26112.556398906883
current error: 0.01565180424037349
 ===== EM-algorithm: iteration 42 =====
current likelihood: -26112.1046900813
current error: 0.015324187087236263
 ===== EM-algorithm: iteration 43 =====
current likelihood: -26111.701750636104
current error: 0.01502063626303718
 ===== EM-algorithm: iteration 44 =====
current likelihood: -26111.33203628956
current error: 0.014743428145151727
 ===== EM-algorithm: iteration 45 =====
current likelihood: -26110.966593216774
current error: 0.014492024640811785
 ===== EM-algorithm: iteration 46 =====
current likelihood: -26110.646793945645
current error: 0.01419287532974356
 ===== EM-algorithm: iteration 47 =====
current likelihood: -26110.376926692697
current error: 0.01402517379181556
 ===== EM-algorithm: iteration 48 =====
current likelihood: -26110.084111176482
current error: 0.013816476460296157
 ===== EM-algorithm: iteration 49 =====
current likelihood: -26109.74823230774
current error: 0.013516040303312993
 ===== EM-algorithm: iteration 0 =====
